/**
 * Shutterstock API Reference
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * OpenAPI spec version: 1.0.13
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShutterstockApiReference) {
      root.ShutterstockApiReference = {};
    }
    root.ShutterstockApiReference.LicenseRequestMetadata = factory(root.ShutterstockApiReference.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The LicenseRequestMetadata model module.
   * @module model/LicenseRequestMetadata
   * @version 1.0.13
   */

  /**
   * Constructs a new <code>LicenseRequestMetadata</code>.
   * Additional information for license requests for enterprise accounts and API subscriptions, 4 fields maximum; which fields are required is set by the account holder
   * @alias module:model/LicenseRequestMetadata
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>LicenseRequestMetadata</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LicenseRequestMetadata} obj Optional instance to populate.
   * @return {module:model/LicenseRequestMetadata} The populated <code>LicenseRequestMetadata</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('customer_id')) {
        obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'String');
      }
      if (data.hasOwnProperty('geo_location')) {
        obj['geo_location'] = ApiClient.convertToType(data['geo_location'], 'String');
      }
      if (data.hasOwnProperty('number_viewed')) {
        obj['number_viewed'] = ApiClient.convertToType(data['number_viewed'], 'String');
      }
      if (data.hasOwnProperty('search_term')) {
        obj['search_term'] = ApiClient.convertToType(data['search_term'], 'String');
      }
    }
    return obj;
  }

  /**
   * The ID of a revenue-sharing partner's customer
   * @member {String} customer_id
   */
  exports.prototype['customer_id'] = undefined;
  /**
   * The customer's location
   * @member {String} geo_location
   */
  exports.prototype['geo_location'] = undefined;
  /**
   * How many pieces of media the customer viewed
   * @member {String} number_viewed
   */
  exports.prototype['number_viewed'] = undefined;
  /**
   * The search term that the customer used
   * @member {String} search_term
   */
  exports.prototype['search_term'] = undefined;



  return exports;
}));


